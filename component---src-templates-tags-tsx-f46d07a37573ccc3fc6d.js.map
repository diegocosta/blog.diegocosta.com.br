{"version":3,"sources":["webpack:///./src/templates/tags.tsx","webpack:///(webpack)/buildin/module.js","webpack:///./src/components/PostHeader.tsx"],"names":["Article","styled","article","PageTitle","h1","Excerpt","p","Tags","props","tag","pageContext","data","allMarkdownRemark","edges","tagHeader","totalCount","location","title","map","node","key","fields","slug","frontmatter","tags","date","url","readingTime","minutes","description","excerpt","pageQuery","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","Container","header","Title","h3","CustomLink","Link","TagLink","TagList","ul","TagItem","li","Details","PostHeader","toFixed","to","index","kebabCase","replace"],"mappings":"2FAAA,0HAsCMA,EAAUC,IAAOC,QAAV,mEAAGD,CAAH,wBAIPE,EAAYF,IAAOG,GAAV,qEAAGH,CAAH,mEAOTI,EAAUJ,IAAOK,EAAV,mEAAGL,CAAH,sBAmCEM,UA/Bf,SAAcC,GAAkB,IACtBC,EAAQD,EAAME,YAAdD,IADsB,EAEAD,EAAMG,KAAKC,kBAAjCC,EAFsB,EAEtBA,MACFC,EAAeL,EAAN,KAHe,EAEfM,WACA,IAEf,OACE,kBAAC,IAAD,CAAQC,SAAUR,EAAMQ,SAAUC,MAAOR,GACvC,oCACE,kBAAC,IAAD,CAAKQ,MAAK,qBAAuBR,IACjC,kBAACN,EAAD,KAAYW,GACXD,EAAMK,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACZ,OACE,kBAACnB,EAAD,CAASoB,IAAKD,EAAKE,OAAOC,MACxB,kBAAC,IAAD,CACEL,MAAOE,EAAKI,YAAYN,MACxBO,KAAML,EAAKI,YAAYC,KACvBC,KAAMN,EAAKI,YAAYE,KACvBC,IAAKP,EAAKE,OAAOC,KACjBK,YAAaR,EAAKE,OAAOM,YAAYC,UAEvC,iCACE,kBAACvB,EAAD,KAAUc,EAAKI,YAAYM,aAAeV,EAAKW,iBAYxD,IAAMC,EAAY,c,mBCtFzBC,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF,I,oCCpBR,6DAaMY,EAAY3C,IAAO4C,OAAV,wEAAG5C,CAAH,wBAIT6C,EAAQ7C,IAAO8C,GAAV,oEAAG9C,CAAH,+FAQL+C,EAAa/C,YAAOgD,QAAV,yEAAGhD,CAAH,2FAUViD,EAAUjD,YAAOgD,QAAV,sEAAGhD,CAAH,yJAaPkD,EAAUlD,IAAOmD,GAAV,sEAAGnD,CAAH,6CAMPoD,EAAUpD,IAAOqD,GAAV,sEAAGrD,CAAH,2DAMPsD,EAAUtD,IAAOK,EAAV,sEAAGL,CAAH,gDA4BEuD,IAtBf,SAAoBhD,GAClB,IAAMmB,EAAcnB,EAAMmB,YAAc,EAAI,oBAAyBnB,EAAMmB,YAAY8B,UAAnE,WAEpB,OACE,kBAACb,EAAD,KACE,kBAACE,EAAD,KAAQtC,EAAMkB,IAAM,kBAACsB,EAAD,CAAYU,GAAIlD,EAAMkB,KAAMlB,EAAMS,OAAsBT,EAAMS,OAClF,kBAACsC,EAAD,KACG/C,EAAMiB,KADT,MACkBE,EADlB,eAGCnB,EAAMgB,MACL,kBAAC2B,EAAD,KACG3C,EAAMgB,KAAKN,KAAI,SAACT,EAAKkD,GAAN,OACd,kBAACN,EAAD,CAASjC,IAAQuC,EAAL,IAAclD,GACxB,kBAACyC,EAAD,CAASQ,GAAE,SAAWE,oBAAUnD,IAAhC,IAA0CA,EAAIoD,QAAQ,KAAM","file":"component---src-templates-tags-tsx-f46d07a37573ccc3fc6d.js","sourcesContent":["import React from 'react';\nimport { graphql, PageRendererProps } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PostHeader from '../components/PostHeader';\n\ninterface TagsProps extends PageRendererProps {\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: [\n        {\n          node: {\n            excerpt: string;\n            frontmatter: {\n              title: string;\n              date: string;\n              tags: string[];\n              description: string;\n            };\n            fields: {\n              slug: string;\n              readingTime: {\n                minutes: number;\n              };\n            };\n          };\n        }\n      ];\n    };\n  };\n}\n\nconst Article = styled.article`\n  margin: 0 0 60px 0;\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 22px;\n  background: #d73738;\n  display: inline;\n  padding: 5px;\n`;\n\nconst Excerpt = styled.p`\n  font-weight: 400;\n`;\n\nfunction Tags(props: TagsProps) {\n  const { tag } = props.pageContext;\n  const { edges, totalCount } = props.data.allMarkdownRemark;\n  const tagHeader = `${tag} (${totalCount})`;\n\n  return (\n    <Layout location={props.location} title={tag}>\n      <>\n        <SEO title={`Publicações sobre ${tag}`} />\n        <PageTitle>{tagHeader}</PageTitle>\n        {edges.map(({ node }) => {\n          return (\n            <Article key={node.fields.slug}>\n              <PostHeader\n                title={node.frontmatter.title}\n                tags={node.frontmatter.tags}\n                date={node.frontmatter.date}\n                url={node.fields.slug}\n                readingTime={node.fields.readingTime.minutes}\n              />\n              <section>\n                <Excerpt>{node.frontmatter.description || node.excerpt}</Excerpt>\n              </section>\n            </Article>\n          );\n        })}\n      </>\n    </Layout>\n  );\n}\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              minutes\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { kebabCase } from 'lodash';\n\ninterface PostHeaderProps {\n  url?: string;\n  date: string;\n  readingTime: number;\n  title: string;\n  tags: string[];\n}\n\nconst Container = styled.header`\n  margin: 20px 0 0 0;\n`;\n\nconst Title = styled.h3`\n  font-family: 'Raleway', sans-serif;\n  margin-bottom: 0;\n  font-weight: 700;\n  font-size: 36px;\n  margin: 0;\n`;\n\nconst CustomLink = styled(Link)`\n  color: #fff;\n  box-shadow: none;\n  text-decoration: none;\n\n  :hover {\n    border-bottom: 1px solid #fff;\n  }\n`;\n\nconst TagLink = styled(Link)`\n  text-decoration: none;\n  box-shadow: none;\n  font-size: 14px;\n  color: #d73738;\n  font-weight: 700;\n  text-transform: lowercase;\n\n  :hover {\n    border-bottom: 1px solid #d73738;\n  }\n`;\n\nconst TagList = styled.ul`\n  display: flex;\n  margin-bottom: 0;\n  padding: 0;\n`;\n\nconst TagItem = styled.li`\n  list-style: none;\n  padding: 0 10px 0 0;\n  margin-bottom: 5px;\n`;\n\nconst Details = styled.p`\n  color: #9a9a9a;\n  font-size: 18px;\n  margin: 5px 0;\n`;\n\nfunction PostHeader(props: PostHeaderProps) {\n  const readingTime = props.readingTime < 1 ? 'Menos de 1 minuto' : `${props.readingTime.toFixed()} minutos`;\n\n  return (\n    <Container>\n      <Title>{props.url ? <CustomLink to={props.url}>{props.title}</CustomLink> : props.title}</Title>\n      <Details>\n        {props.date} · {readingTime} de leitura\n      </Details>\n      {props.tags && (\n        <TagList>\n          {props.tags.map((tag, index) => (\n            <TagItem key={`${index}-${tag}`}>\n              <TagLink to={`/tags/${kebabCase(tag)}`}>#{tag.replace(/ /g, '-')}</TagLink>\n            </TagItem>\n          ))}\n        </TagList>\n      )}\n    </Container>\n  );\n}\n\nexport default PostHeader;\n"],"sourceRoot":""}