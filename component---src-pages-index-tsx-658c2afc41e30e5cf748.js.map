{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["Article","styled","article","Excerpt","p","BlogIndex","props","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","map","node","frontmatter","fields","slug","date","tags","readingTime","minutes","url","key","description","excerpt","pageQuery"],"mappings":"2FAAA,0HAuCMA,EAAUC,IAAOC,QAAV,qEAAGD,CAAH,wBAIPE,EAAUF,IAAOG,EAAV,qEAAGH,CAAH,sBAkCEI,UA9Bf,SAAmBC,GAAuB,IAChCC,EAASD,EAATC,KACFC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUT,EAAMS,SAAUJ,MAAOH,GACvC,oCACE,kBAAC,IAAD,MACCI,EAAMI,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KAC9CC,EAAOJ,EAAKC,YAAYG,KACxBC,EAAOL,EAAKC,YAAYI,KACxBC,EAAcN,EAAKE,OAAOI,YAAYC,QACtCC,EAAMR,EAAKE,OAAOC,KAExB,OACE,kBAACpB,EAAD,CAAS0B,IAAKT,EAAKE,OAAOC,MACxB,kBAAC,IAAD,CAAYT,MAAOA,EAAOU,KAAMA,EAAMI,IAAKA,EAAKH,KAAMA,EAAMC,YAAaA,IACzE,iCACE,kBAACpB,EAAD,KAAUc,EAAKC,YAAYS,aAAeV,EAAKW,iBAYxD,IAAMC,EAAY","file":"component---src-pages-index-tsx-658c2afc41e30e5cf748.js","sourcesContent":["import React from 'react';\nimport { graphql, PageRendererProps } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PostHeader from '../components/PostHeader';\n\ninterface BlogIndexProps extends PageRendererProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: {\n            excerpt: string;\n            fields: {\n              slug: string;\n              readingTime: {\n                minutes: number;\n              };\n            };\n            frontmatter: {\n              date: string;\n              title: string;\n              description: string;\n              tags: string[];\n            };\n          };\n        }\n      ];\n    };\n  };\n}\n\nconst Article = styled.article`\n  margin: 0 0 60px 0;\n`;\n\nconst Excerpt = styled.p`\n  font-weight: 400;\n`;\n\nfunction BlogIndex(props: BlogIndexProps) {\n  const { data } = props;\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <>\n        <SEO />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          const date = node.frontmatter.date;\n          const tags = node.frontmatter.tags;\n          const readingTime = node.fields.readingTime.minutes;\n          const url = node.fields.slug;\n\n          return (\n            <Article key={node.fields.slug}>\n              <PostHeader title={title} date={date} url={url} tags={tags} readingTime={readingTime} />\n              <section>\n                <Excerpt>{node.frontmatter.description || node.excerpt}</Excerpt>\n              </section>\n            </Article>\n          );\n        })}\n      </>\n    </Layout>\n  );\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              minutes\n            }\n          }\n          frontmatter {\n            date(formatString: \"DD/MM/YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}