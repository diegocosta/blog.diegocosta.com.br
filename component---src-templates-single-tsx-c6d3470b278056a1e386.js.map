{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./src/templates/single.tsx","webpack:///./src/components/PostHeader.tsx"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","Article","styled","article","Content","section","Single","props","post","data","markdownRemark","siteTitle","site","siteMetadata","title","location","smallLogo","frontmatter","description","excerpt","date","tags","readingTime","fields","minutes","dangerouslySetInnerHTML","__html","html","pageQuery","Container","header","Title","h3","CustomLink","Link","TagLink","TagList","ul","TagItem","li","Details","p","PostHeader","toFixed","url","to","map","tag","index","key","kebabCase","replace"],"mappings":"4EAAAA,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF,I,kCCpBR,0HAkCMY,EAAUC,IAAOC,QAAV,qEAAGD,CAAH,yBAIPE,EAAUF,IAAOG,QAAV,qEAAGH,CAAH,0bA4DEI,UAtBf,SAAgBC,GACd,IAAMC,EAAOD,EAAME,KAAKC,eAClBC,EAAYJ,EAAME,KAAKG,KAAKC,aAAaC,MAE/C,OACE,kBAAC,IAAD,CAAQC,SAAUR,EAAMQ,SAAUD,MAAOH,EAAWK,WAAW,GAC7D,oCACE,kBAAC,IAAD,CAAKF,MAAON,EAAKS,YAAYH,MAAOI,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UACtF,kBAAClB,EAAD,KACE,kBAAC,IAAD,CACEa,MAAON,EAAKS,YAAYH,MACxBM,KAAMZ,EAAKS,YAAYG,KACvBC,KAAMb,EAAKS,YAAYI,KACvBC,YAAad,EAAKe,OAAOD,YAAYE,UAEvC,kBAACpB,EAAD,CAASqB,wBAAyB,CAAEC,OAAQlB,EAAKmB,YASpD,IAAMC,EAAY,c,oCCpGzB,6DAaMC,EAAY3B,IAAO4B,OAAV,wEAAG5B,CAAH,wBAIT6B,EAAQ7B,IAAO8B,GAAV,oEAAG9B,CAAH,+FAQL+B,EAAa/B,YAAOgC,QAAV,yEAAGhC,CAAH,2FAUViC,EAAUjC,YAAOgC,QAAV,sEAAGhC,CAAH,yJAaPkC,EAAUlC,IAAOmC,GAAV,sEAAGnC,CAAH,6CAMPoC,EAAUpC,IAAOqC,GAAV,sEAAGrC,CAAH,2DAMPsC,EAAUtC,IAAOuC,EAAV,sEAAGvC,CAAH,gDA4BEwC,IAtBf,SAAoBnC,GAClB,IAAMe,EAAcf,EAAMe,YAAc,EAAI,oBAAyBf,EAAMe,YAAYqB,UAAnE,WAEpB,OACE,kBAACd,EAAD,KACE,kBAACE,EAAD,KAAQxB,EAAMqC,IAAM,kBAACX,EAAD,CAAYY,GAAItC,EAAMqC,KAAMrC,EAAMO,OAAsBP,EAAMO,OAClF,kBAAC0B,EAAD,KACGjC,EAAMa,KADT,MACkBE,EADlB,eAGCf,EAAMc,MACL,kBAACe,EAAD,KACG7B,EAAMc,KAAKyB,KAAI,SAACC,EAAKC,GAAN,OACd,kBAACV,EAAD,CAASW,IAAQD,EAAL,IAAcD,GACxB,kBAACZ,EAAD,CAASU,GAAE,SAAWK,oBAAUH,IAAhC,IAA0CA,EAAII,QAAQ,KAAM","file":"component---src-templates-single-tsx-c6d3470b278056a1e386.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React from 'react';\nimport { graphql, PageRendererProps } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PostHeader from '../components/PostHeader';\n\ninterface SingleProps extends PageRendererProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n    markdownRemark: {\n      id: string;\n      excerpt: string;\n      html: string;\n      fields: {\n        readingTime: {\n          minutes: number;\n        };\n      };\n      frontmatter: {\n        title: string;\n        date: string;\n        description: string;\n        tags: string[];\n      };\n    };\n  };\n}\n\nconst Article = styled.article`\n  margin-bottom: 50px;\n`;\n\nconst Content = styled.section`\n  line-height: 1.5;\n\n  a {\n    color: #d73738;\n    text-decoration: none;\n    border-bottom: 1px solid transparent;\n\n    :hover {\n      border-bottom: 1px solid #d73738;\n    }\n  }\n\n  blockquote {\n    border-left: 5px solid #d73738;\n    padding-left: 20px;\n  }\n\n  .gatsby-highlight {\n    padding: 10px 0;\n  }\n\n  pre[class*='language-'],\n  code[class*='language-'],\n  .gatsby-highlight {\n    background-color: transparent;\n  }\n\n  .line-numbers-rows,\n  .line-numbers-rows span::before {\n    border: 0.5px solid transparent;\n  }\n\n  img {\n    box-shadow: none !important;\n  }\n`;\n\nfunction Single(props: SingleProps) {\n  const post = props.data.markdownRemark;\n  const siteTitle = props.data.site.siteMetadata.title;\n\n  return (\n    <Layout location={props.location} title={siteTitle} smallLogo={true}>\n      <>\n        <SEO title={post.frontmatter.title} description={post.frontmatter.description || post.excerpt} />\n        <Article>\n          <PostHeader\n            title={post.frontmatter.title}\n            date={post.frontmatter.date}\n            tags={post.frontmatter.tags}\n            readingTime={post.fields.readingTime.minutes}\n          />\n          <Content dangerouslySetInnerHTML={{ __html: post.html }} />\n        </Article>\n      </>\n    </Layout>\n  );\n}\n\nexport default Single;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        readingTime {\n          minutes\n        }\n      }\n      frontmatter {\n        title\n        date(formatString: \"DD/MM/YYYY\")\n        description\n        tags\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { kebabCase } from 'lodash';\n\ninterface PostHeaderProps {\n  url?: string;\n  date: string;\n  readingTime: number;\n  title: string;\n  tags: string[];\n}\n\nconst Container = styled.header`\n  margin: 20px 0 0 0;\n`;\n\nconst Title = styled.h3`\n  font-family: 'Raleway', sans-serif;\n  margin-bottom: 0;\n  font-weight: 700;\n  font-size: 36px;\n  margin: 0;\n`;\n\nconst CustomLink = styled(Link)`\n  color: #fff;\n  box-shadow: none;\n  text-decoration: none;\n\n  :hover {\n    border-bottom: 1px solid #fff;\n  }\n`;\n\nconst TagLink = styled(Link)`\n  text-decoration: none;\n  box-shadow: none;\n  font-size: 14px;\n  color: #d73738;\n  font-weight: 700;\n  text-transform: lowercase;\n\n  :hover {\n    border-bottom: 1px solid #d73738;\n  }\n`;\n\nconst TagList = styled.ul`\n  display: flex;\n  margin-bottom: 0;\n  padding: 0;\n`;\n\nconst TagItem = styled.li`\n  list-style: none;\n  padding: 0 10px 0 0;\n  margin-bottom: 5px;\n`;\n\nconst Details = styled.p`\n  color: #9a9a9a;\n  font-size: 18px;\n  margin: 5px 0;\n`;\n\nfunction PostHeader(props: PostHeaderProps) {\n  const readingTime = props.readingTime < 1 ? 'Menos de 1 minuto' : `${props.readingTime.toFixed()} minutos`;\n\n  return (\n    <Container>\n      <Title>{props.url ? <CustomLink to={props.url}>{props.title}</CustomLink> : props.title}</Title>\n      <Details>\n        {props.date} Â· {readingTime} de leitura\n      </Details>\n      {props.tags && (\n        <TagList>\n          {props.tags.map((tag, index) => (\n            <TagItem key={`${index}-${tag}`}>\n              <TagLink to={`/tags/${kebabCase(tag)}`}>#{tag.replace(/ /g, '-')}</TagLink>\n            </TagItem>\n          ))}\n        </TagList>\n      )}\n    </Container>\n  );\n}\n\nexport default PostHeader;\n"],"sourceRoot":""}