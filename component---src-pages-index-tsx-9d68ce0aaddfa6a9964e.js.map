{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///(webpack)/buildin/module.js","webpack:///./src/components/PostHeader.tsx"],"names":["Article","styled","article","Excerpt","p","BlogIndex","props","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","map","node","frontmatter","fields","slug","date","tags","readingTime","minutes","url","key","description","excerpt","pageQuery","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","Container","header","Title","h3","CustomLink","Link","TagLink","TagList","ul","TagItem","li","Details","PostHeader","toFixed","to","tag","index","kebabCase","replace"],"mappings":"2FAAA,0HAuCMA,EAAUC,IAAOC,QAAV,qEAAGD,CAAH,wBAIPE,EAAUF,IAAOG,EAAV,qEAAGH,CAAH,sBAkCEI,UA9Bf,SAAmBC,GAAuB,IAChCC,EAASD,EAATC,KACFC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUT,EAAMS,SAAUJ,MAAOH,GACvC,oCACE,kBAAC,IAAD,MACCI,EAAMI,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KAC9CC,EAAOJ,EAAKC,YAAYG,KACxBC,EAAOL,EAAKC,YAAYI,KACxBC,EAAcN,EAAKE,OAAOI,YAAYC,QACtCC,EAAMR,EAAKE,OAAOC,KAExB,OACE,kBAACpB,EAAD,CAAS0B,IAAKT,EAAKE,OAAOC,MACxB,kBAAC,IAAD,CAAYT,MAAOA,EAAOU,KAAMA,EAAMI,IAAKA,EAAKH,KAAMA,EAAMC,YAAaA,IACzE,iCACE,kBAACpB,EAAD,KAAUc,EAAKC,YAAYS,aAAeV,EAAKW,iBAYxD,IAAMC,EAAY,c,mBC/EzBC,EAAOC,QAAU,SAASD,GAoBzB,OAnBKA,EAAOE,kBACXF,EAAOG,UAAY,aACnBH,EAAOI,MAAQ,GAEVJ,EAAOK,WAAUL,EAAOK,SAAW,IACxCC,OAAOC,eAAeP,EAAQ,SAAU,CACvCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOU,KAGhBJ,OAAOC,eAAeP,EAAQ,KAAM,CACnCQ,YAAY,EACZC,IAAK,WACJ,OAAOT,EAAOW,KAGhBX,EAAOE,gBAAkB,GAEnBF,I,oCCpBR,6DAaMY,EAAYzC,IAAO0C,OAAV,wEAAG1C,CAAH,wBAIT2C,EAAQ3C,IAAO4C,GAAV,oEAAG5C,CAAH,+FAQL6C,EAAa7C,YAAO8C,QAAV,yEAAG9C,CAAH,2FAUV+C,EAAU/C,YAAO8C,QAAV,sEAAG9C,CAAH,yJAaPgD,EAAUhD,IAAOiD,GAAV,sEAAGjD,CAAH,6CAMPkD,EAAUlD,IAAOmD,GAAV,sEAAGnD,CAAH,2DAMPoD,EAAUpD,IAAOG,EAAV,sEAAGH,CAAH,gDA4BEqD,IAtBf,SAAoBhD,GAClB,IAAMiB,EAAcjB,EAAMiB,YAAc,EAAI,oBAAyBjB,EAAMiB,YAAYgC,UAAnE,WAEpB,OACE,kBAACb,EAAD,KACE,kBAACE,EAAD,KAAQtC,EAAMmB,IAAM,kBAACqB,EAAD,CAAYU,GAAIlD,EAAMmB,KAAMnB,EAAMK,OAAsBL,EAAMK,OAClF,kBAAC0C,EAAD,KACG/C,EAAMe,KADT,MACkBE,EADlB,eAGCjB,EAAMgB,MACL,kBAAC2B,EAAD,KACG3C,EAAMgB,KAAKN,KAAI,SAACyC,EAAKC,GAAN,OACd,kBAACP,EAAD,CAASzB,IAAQgC,EAAL,IAAcD,GACxB,kBAACT,EAAD,CAASQ,GAAE,SAAWG,oBAAUF,IAAhC,IAA0CA,EAAIG,QAAQ,KAAM","file":"component---src-pages-index-tsx-9d68ce0aaddfa6a9964e.js","sourcesContent":["import React from 'react';\nimport { graphql, PageRendererProps } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PostHeader from '../components/PostHeader';\n\ninterface BlogIndexProps extends PageRendererProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: [\n        {\n          node: {\n            excerpt: string;\n            fields: {\n              slug: string;\n              readingTime: {\n                minutes: number;\n              };\n            };\n            frontmatter: {\n              date: string;\n              title: string;\n              description: string;\n              tags: string[];\n            };\n          };\n        }\n      ];\n    };\n  };\n}\n\nconst Article = styled.article`\n  margin: 0 0 60px 0;\n`;\n\nconst Excerpt = styled.p`\n  font-weight: 400;\n`;\n\nfunction BlogIndex(props: BlogIndexProps) {\n  const { data } = props;\n  const siteTitle = data.site.siteMetadata.title;\n  const posts = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <>\n        <SEO />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          const date = node.frontmatter.date;\n          const tags = node.frontmatter.tags;\n          const readingTime = node.fields.readingTime.minutes;\n          const url = node.fields.slug;\n\n          return (\n            <Article key={node.fields.slug}>\n              <PostHeader title={title} date={date} url={url} tags={tags} readingTime={readingTime} />\n              <section>\n                <Excerpt>{node.frontmatter.description || node.excerpt}</Excerpt>\n              </section>\n            </Article>\n          );\n        })}\n      </>\n    </Layout>\n  );\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        tag: fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n            readingTime {\n              minutes\n            }\n          }\n          frontmatter {\n            date(formatString: \"DD/MM/YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styled from 'styled-components';\nimport { kebabCase } from 'lodash';\n\ninterface PostHeaderProps {\n  url?: string;\n  date: string;\n  readingTime: number;\n  title: string;\n  tags: string[];\n}\n\nconst Container = styled.header`\n  margin: 20px 0 0 0;\n`;\n\nconst Title = styled.h3`\n  font-family: 'Raleway', sans-serif;\n  margin-bottom: 0;\n  font-weight: 700;\n  font-size: 36px;\n  margin: 0;\n`;\n\nconst CustomLink = styled(Link)`\n  color: #fff;\n  box-shadow: none;\n  text-decoration: none;\n\n  :hover {\n    border-bottom: 1px solid #fff;\n  }\n`;\n\nconst TagLink = styled(Link)`\n  text-decoration: none;\n  box-shadow: none;\n  font-size: 14px;\n  color: #d73738;\n  font-weight: 700;\n  text-transform: lowercase;\n\n  :hover {\n    border-bottom: 1px solid #d73738;\n  }\n`;\n\nconst TagList = styled.ul`\n  display: flex;\n  margin-bottom: 0;\n  padding: 0;\n`;\n\nconst TagItem = styled.li`\n  list-style: none;\n  padding: 0 10px 0 0;\n  margin-bottom: 5px;\n`;\n\nconst Details = styled.p`\n  color: #9a9a9a;\n  font-size: 18px;\n  margin: 5px 0;\n`;\n\nfunction PostHeader(props: PostHeaderProps) {\n  const readingTime = props.readingTime < 1 ? 'Menos de 1 minuto' : `${props.readingTime.toFixed()} minutos`;\n\n  return (\n    <Container>\n      <Title>{props.url ? <CustomLink to={props.url}>{props.title}</CustomLink> : props.title}</Title>\n      <Details>\n        {props.date} Â· {readingTime} de leitura\n      </Details>\n      {props.tags && (\n        <TagList>\n          {props.tags.map((tag, index) => (\n            <TagItem key={`${index}-${tag}`}>\n              <TagLink to={`/tags/${kebabCase(tag)}`}>#{tag.replace(/ /g, '-')}</TagLink>\n            </TagItem>\n          ))}\n        </TagList>\n      )}\n    </Container>\n  );\n}\n\nexport default PostHeader;\n"],"sourceRoot":""}